prototype(NeosRulez.Blog:Content.BlogPosts) < prototype(Neos.Neos:ContentComponent) {

    showaslist = ${node.properties.showaslist ? true : false}
    blogcategories = ${node.properties.blogcategories}
    startingPoint = ${node.properties.nodeidentifier}

    pagebrowser = ${node.properties.pagebrowser}
    showdate = ${node.properties.showdate}
    showsubtitle = ${node.properties.showsubtitle}
    sorting = ${node.properties.sorting}

    showauthor = ${node.properties.showauthor}
    showcategories = ${node.properties.showcategories}

    filter = Neos.Fusion:Loop {
        items = ${node.properties.blogcategories}
        itemName = 'category'
        itemKey = 'key'
        itemRenderer = ${category.identifier + (iterator.isLast ? '' : ',')}
    }
    filterstring = ${'[blogcategories *= "' + this.filter + '"]'}

    blogposts = ${this.startingPoint ? q(this.startingPoint).children('[instanceof NeosRulez.Blog:Document.BlogPost]').sort('blogdate', this.sorting).filterByReference(this.filterstring, 'blogcategories').get() : false}

    countposts = ${this.startingPoint ? Array.length(this.blogposts) : 0}
    page = ${request.arguments.page ? request.arguments.page : 0}
    posts = ${node.properties.posts}
    node = ${node}

    renderer = afx`
        <NeosRulez.Blog:Content.AbstractContent>
            <div @if.render={props.blogposts} class="row filtered">
                <Neos.Fusion:Loop items={props.blogposts} item="item">
                    <NeosRulez.Blog:Component.BlogPostThumb @if.render={!props.showaslist} item={item} />
                    <NeosRulez.Blog:Component.BlogPostRow @if.render={props.showaslist} item={item} />
                </Neos.Fusion:Loop>
            </div>
            <NeosRulez.Blog:Component.BlogPagination @if.render={props.pagebrowser} posts={props.posts} countposts={props.countposts} page={props.page} node={props.node} />
        </NeosRulez.Blog:Content.AbstractContent>
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            documentNode = ${documentNode}
            node = ${node}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTypeTag('Neos.Neos:Document', node)}
            2 = ${Neos.Caching.nodeTag(node)}
        }
    }

}